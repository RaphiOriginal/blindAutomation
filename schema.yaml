coordinates: include('coordinates')
api: str()
timezone: str()
walls: list(include('wall'), min=1)
---

coordinates:
  lat: num()
  long: num()
  alt: int()

wall:
  wall:
    name: str()
    in: int()
    out: int()
    blinds: list(include('blind'), required=False)

blind:
  blind:
    name: str()
    device-id: str()
    device-typ: enum('SHELLY')
    in: int(required=False)
    out: int(required=False)
    tilt_time: num(required=False)
    triggers: list(include('Trigger'), required=False)
    events: list(include('Event'), required=False)

Trigger: any(include('TriggerStr'), include('TriggerObj'))

TriggerStr: enum('SUNRISE', 'SUNSET', 'SUNIN', 'SUNOUT')

TriggerObj: any(include('TIME'), include('SUNRISE'), include('SUNSET'), include('SUNIN'), include('SUNOUT'), include('AZIMUTH'), include('ELEVATION'), include('POSITION'))

TIME:
  TIME:
    task: include('task')
    at: list(include('day'), required=False)
    time: str()
    offset: int(required=False)

SUNRISE:
  SUNRISE:
    task: include('task', required=False)
    at: list(include('day'), required=False)
    offset: int(required=False)

SUNSET:
  SUNSET:
    task: include('task', required=False)
    at: list(include('day'), required=False)
    offset: int(required=False)

SUNIN:
  SUNIN:
    task: include('task', required=False)
    at: list(include('day'), required=False)
    offset: int(required=False)

SUNOUT:
  SUNOUT:
    task: include('task', required=False)
    at: list(include('day'), required=False)
    offset: int(required=False)

AZIMUTH:
  AZIMUTH:
    azimuth: int()
    task: include('task', required=False)
    at: list(include('day'), required=False)
    offset: int(required=False)

ELEVATION:
  ELEVATION:
    elevation: int()
    direction: str(any('RISE', 'SET'))
    task: include('task', required=False)
    at: list(include('day'), required=False)
    offset: int(required=False)

POSITION:
  POSITION:
    azimuth: int()
    elevation: int()
    direction: str(any('RISE', 'SET'))
    task: include('task')
    at: list(include('day'), required=False)
    offset: int(required=False)

Event: any(include('EventStr'), include('EventObj'))

EventStr: enum('CLOUDY', 'RAIN', 'CLEAR', 'STORM', 'DRIZZLE', 'SNOW')

EventObj: any(include('CLOUDY'), include('RAIN'), include('STORM'), include('DRIZZLE'), include('SNOW'))

CLOUDY:
  CLOUDY:
    task: include('task', required=False)
    intensity: list(enum('FEW', 'SCATTERED', 'BROKEN', 'OVERCAST'), required=False)

RAIN:
  RAIN:
    task: include('task', required=False)
    intensity: list(enum('MODERATE', 'VERY_HEAVY', 'EXTREME', 'FREEZING', 'LIGHT_SHOWER', 'HEAVY_SHOWER', 'RAGGED_SHOWER', 'SHOWER', 'HEAVY', 'LIGHT'), required=False)

STORM:
  STORM:
    task: include('task', required=False)
    intensity: list(enum('LIGHT_RAIN', 'RAIN', 'HEAVY_RAIN', 'LIGHT', 'NORMAL', 'HEAVY', 'RAGGED', 'LIGHT_DRIZZLE', 'DRIZZLE', 'HEAVY_DRIZZLE'), required=False)

DRIZZLE:
  DRIZZLE:
    task: include('task', required=False)
    intensity: list(enum('LIGHT_RAIN', 'RAIN', 'LIGHT', 'NORMAL', 'HEAVY', 'HEAVY_RAIN', 'SHOWER_RAIN', 'HEAVY_SHOWER_RAIN', 'SHOWER'), required=False)

SNOW:
  SNOW:
    task: include('task', required=False)
    intensity: list(enum('LIGHT_RAIN', 'RAIN', 'LIGHT', 'NORMAL', 'HEAVY', 'SHOWER', 'LIGHT_SHOWER', 'HEAVY_SHOWER', 'SLEET', 'LIGHT_SHOWER_SLEET', 'SHOWER_SLEET'), required=False)

task: any(enum('OPEN', 'CLOSE', 'TILT', 'HALF'), include('TILT'))

day: any(enum('MO', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU', 'WORKINGDAY', 'WEEKEND'), regex('^(MO|TU|WE|TH|FR|SA|SU)-(MO|TU|WE|TH|FR|SA|SU)$'))

TILT:
  TILT: int()
